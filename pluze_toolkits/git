#!/bin/bash
#
# The MIT License (MIT)
#
# Copyright (c) 2015 Paco Castro
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


##DOC: Git common operations
##DOC:

##DOC: s: git status
function s() {
  git status
}

##DOC: cfg <user.name> <user.email>: Change user.email
function cfg() {
  if [ $# -ne 2 ]; then
    echo "ERROR: 2 parameters exected"
    return 255
  fi
  echo git config --global user.name "$1"
  echo git config --global user.email $2
  if [ $PLUZE_DRYRUN -eq 0 ]; then
    git config --global user.name "$1"
    git config --global user.email $2
  fi
}

##DOC: l (s): git log (--stat if 's')
function l() {
  if [ $1 == "s" ]; then
    echo git log --stat
    git log --stat
  else
    echo git log
    git log
  fi
}

##DOC: sp: git smart-pull
function sp() {
  echo git smart-pull
  if [ $PLUZE_DRYRUN -eq 0 ]; then
    git smart-pull
  fi
}

## DOC: dno <commit>: Show files changed since the given commit
function dno() {
  if [ $# -eq 1 ]; then
    echo git diff --name-only $1
    git diff --name-only $1
  fi
}

##DOC: pom: git push origin master
function pom() {
  echo git push origin master
  if [ $PLUZE_DRYRUN -eq 0 ]; then
    git push origin master
  fi
}

##DOC: po: push origin current_branch
function po() {
local current

  if [ $# -eq 1 ]; then
    current=$1
  else
    current=`git branch | grep "^*" | cut -d " " -f 2`
  fi

  echo git push origin $current
  if [ $PLUZE_DRYRUN -eq 0 ]; then
    git push origin $current
  fi
}

##DOC: cm: git checkout master
function cm() {

  echo git checkout master
  if [ $PLUZE_DRYRUN -eq 0 ]; then
    git checkout master
  fi
}

##DOC: c <branch>: git checkout branch
function c() {

  if [ $# -ne 1 ]; then
    echo "ERROR branch parameter missing"
    return 255
  fi
  echo git checkout $1
  if [ $PLUZE_DRYRUN -eq 0 ]; then
    git checkout $1
  fi
}
